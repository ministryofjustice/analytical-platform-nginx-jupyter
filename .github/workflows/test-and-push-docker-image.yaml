name: Run tests and push Docker image on success

on:
  push:
    branches: [main]
  pull_request:
  release:

jobs:
  test-and-push:
    runs-on: [self-hosted, management-ecr]
    env:
      APP_HOST: jupyter-lab
      APP_PORT: 8888
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      AUTH0_TENANT_DOMAIN: ${{ secrets.TENANT_DOMAIN }}
      LOGOUT_URL: https://cpanel-master.services.dev.mojanalytics.xyz
      TEST_TAG: ministryofjustice/nginx-jupyter:test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: docker context use builders || docker context create builders

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          endpoint: builders

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::593291632749:role/github-actions-management-ecr
          role-duration-seconds: 1200

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: 593291632749

      - name: Prep Tags
        id: prep
        run: |
          TAG=noop
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            TAG=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$TAG" ]; then
              TAG=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            TAG=pr-${{ github.event.number }}
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAG="sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Build image
        run: make build
        env:
          NETWORK: default
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.prep.outputs.tag }}

      - name: Spin up (docker-compose)
        run: make clean up

      - name: Sleep for 10 seconds
        uses: whatnick/wait-action@master
        with:
          time: '10s'

      - name: Test (docker-compose)
        run: make integration

      - name: Clean up (docker-compose)
        if: always()
        run: make clean

      # - name: Push image
      #   run: make push
      #   env:
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     IMAGE_TAG: ${{ steps.prep.outputs.tag }}
